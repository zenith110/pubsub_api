version: "3"
services:
  pubsub-api-backend-v1:
    image: pubsub-api/backend
    build:
      context: ./backend/python
      dockerfile: dev.dockerfile
    container_name: pubsub-api-backend-v1
    environment:
      CHOKIDAR_USEPOLLING: "true"
    restart: unless-stopped
    volumes:
      - ./backend/python/src:/home/backend/app
    ports:
      - "8080:8080"
    env_file:
      - .env
  pubsub-api-grapqhl:
    image: pubsub-api/backend-v2
    build:
      context: ./backend/go/src
      dockerfile: dev.dockerfile
    container_name: grapqhl
    environment:
      CHOKIDAR_USEPOLLING: "true"
    restart: unless-stopped
    ports:
      - "8443:8443"
    env_file:
      - .env
  pubsub-api-frontend:
    build:
      context: ./frontend
      dockerfile: .dockerfile
    environment:
      CHOKIDAR_USEPOLLING: "true"
    container_name: pubsub-api-frontend
    stdin_open: true
    ports:
      - "3000:3000"
    env_file:
      - .env
    depends_on:
      - pubsub-api-backend-v1
      - pubsub-api-backend-v2
    links:
      - pubsub-api-backend-v1
      - pubsub-api-backend-v2
  promethus:
    image: prom/prometheus
    container_name: prom
    ports:
      - "9090:9090"
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
  grafana:
    image: grafana/grafana
    ports:
      - "4000:3000"
  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - "--path.rootfs=/host"
    network_mode: host
    pid: host
    restart: always
    volumes:
      - '/:/host:ro,rslave'
    ports:
      - 9100:9100
