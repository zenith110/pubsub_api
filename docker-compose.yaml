version: "3.8"
services:
  pubsub-api-backend-v1:
    image: pubsub-api/backend
    build:
      context: ./backend/python
      dockerfile: dev.dockerfile
    container_name: pubsub-api-backend-v1
    environment:
      CHOKIDAR_USEPOLLING: "true"
    restart: unless-stopped
    volumes:
      - ./backend/python/src:/home/backend/app
    ports:
      - "8080:8080"
    env_file:
      - .env
  pubsub-api-grapqhl:
    image: pubsub-api/backend-v2
    build:
      context: ./backend/go/src
      dockerfile: dev.dockerfile
    container_name: grapqhl
    environment:
      CHOKIDAR_USEPOLLING: "true"
    restart: unless-stopped
    ports:
      - "8443:8443"
    env_file:
      - .env
  pubsub-api-frontend:
    build:
      context: ./frontend
      dockerfile: .dockerfile
    environment:
      CHOKIDAR_USEPOLLING: "true"
    container_name: pubsub-api-frontend
    stdin_open: true
    ports:
      - "3000:3000"
    env_file:
      - .env
    depends_on:
      - pubsub-api-backend-v1
      - pubsub-api-grapqhl
    links:
      - pubsub-api-backend-v1
      - pubsub-api-grapqhl
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    ports:
      - 9090:9090
  grafana:
    image: grafana/grafana
    ports:
      - "4000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
  traefik:
    image: traefik/whoami
    ports:
      - "9080:8080"
    container_name: "traefik"
  loki:
    image: grafana/loki
    container_name: loki
    ports:
      - "3100:3100"

volumes:
  grafana-storage:
  prometheus_data:
